/**
 * Design Reference:
 * https://cacoo.com/diagrams/88x93Ppap4rtGUhs#5F65C
 */



//
// Base UI Colors
//
$ice:               #e8ecf0;
$off-white:         #f6f6f6;
$gray:              #d5d8dd;
$lemon:             #ffd966;
$blue-gray:         #9fb3c3;
$aqua:              #55a0c2;
$purple:            #6460aa;
$mid-gray:          #7f8a93;
$blue:              #0082a9;
$green:             #7f982f;
$lite-green:        #a8c839;
$soft-green:        #eff6e1;
$white:             #ffffff;
$black:             #000000;
$lite-gray:         #cccccc;
$active-stroke:     #c2cdd8;
$disabled-stroke:   #d5d8dd;
$shark-skin:        #6f7b86;

//
// Sequence Colors
//
$sequence-1:        #e47a39;
$sequence-2:        #78b1e4;
$sequence-3:        #67ab9f;
$sequence-4:        #b42a40;

//
// Viz Colors
//
$viz-aqua:          #32cee6;
$viz-purple:        #9b75b1;
$viz-lime:          #a8e077;
$viz-ocean:         #37c0a7;
$viz-orange:        #f47634;
$viz-blue:          #003da0;
$viz-yellow:        #f7d03e;



/**
 * Collection of the colors
 */
$colors: (

  ('ice', $ice),
  ('off-white', $off-white),
  ('gray', $gray),
  ('lemon', $lemon),
  ('blue-gray', $blue-gray),
  ('aqua', $aqua),
  ('purple', $purple),
  ('mid-gray', $mid-gray),
  ('blue', $blue),
  ('green', $green),
  ('lite-green', $lite-green),
  ('white', $white),
  ('black', $black),
  ('lite-gray', $lite-gray),
  ('active-stroke', $active-stroke),
  ('disabled-stroke', $disabled-stroke),
  ('soft-green', $soft-green),
  ('shark-skin', $shark-skin),

  ('sequence-1', $sequence-1),
  ('sequence-2', $sequence-2),
  ('sequence-3', $sequence-3),
  ('sequence-4', $sequence-4),

  ('viz-aqua', $viz-aqua),
  ('viz-purple', $viz-purple),
  ('viz-lime', $viz-lime),
  ('viz-ocean', $viz-ocean),
  ('viz-orange', $viz-orange),
  ('viz-blue', $viz-blue),
  ('viz-yellow', $viz-yellow)

);



//
// Helper classes for colors
//
@each $name, $hex in $colors {
  %bg-#{$name} {
    background-color: $hex;
  }
  %color-#{$name} {
    color: $hex;
  }
  %border-#{$name} {
    border-color: $hex;
  }
}



//
// assign to a name spaced variable to avoid collision
//
$supre-colors: $colors;



//
// Create background colors to help with specificity issues
// if supplied list is empty, it returns all background classes
//
@mixin appendBackgroundColorClasses($color-names...){
  @if (length($color-names) > 0) {
    @each $name, $hex in $supre-colors {
      @each $color-name in $color-names {
        @if ($color-name == $name) {
          &.bg-#{$name} { background-color: $hex; }
        } 
      }
    }  
  }
  @else {
    @each $name, $hex in $supre-colors {
      &.bg-#{$name} { background-color: $hex; }
    }
  }
}



//
// Create text colors to help with specificity issues
// if supplied list is empty, it returns all text classes
//
@mixin appendTextColorClasses($color-names...){
  @if (length($color-names) > 0) {
    @each $name, $hex in $supre-colors {
      @each $color-name in $color-names {
        @if ($color-name == $name) {
          &.color-#{$name} { color: $hex; }
        } 
      }
    }  
  }
  @else {
    @each $name, $hex in $supre-colors {
      &.color-#{$name} { color: $hex; }
    }
  }
}



//
// Create text colors to help with specificity issues
// if supplied list is empty, it returns all text classes
//
@mixin appendBorderColorClasses($color-names...){
  @if (length($color-names) > 0) {
    @each $name, $hex in $supre-colors {
      @each $color-name in $color-names {
        @if ($color-name == $name) {
          &.border-#{$name} { border-color: $hex; }
        } 
      }
    }  
  }
  @else {
    @each $name, $hex in $supre-colors {
      &.border-#{$name} { border-color: $hex; }
    }
  }
}

